generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id
  userId             String
  type               String  @default("user")
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  User               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Author {
  id   String @id
  name String @db.VarChar(255)
  Book Book[]
}

model Book {
  title  String   @db.VarChar(255)
  isbn   String   @id @db.VarChar(255)
  image  String   @db.VarChar(255)
  Author Author[]
  List   List[]
}

model List {
  id   String @id
  name String @db.VarChar(255)
  User User[]
  Book Book[]
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  favoritesId   String?
  Account       Account[]
  Session       Session[]
  List          List?     @relation(fields: [favoritesId], references: [id])
}

model VerificationRequest {
  id         String   @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime

  @@unique([identifier, token])
}
